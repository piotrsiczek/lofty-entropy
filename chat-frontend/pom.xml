<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>
    <parent>
        <artifactId>LoftyEntropy</artifactId>
        <groupId>com.spiczek.loftyentropy</groupId>
        <version>1.0-SNAPSHOT</version>
    </parent>
    <packaging>war</packaging>
    <groupId>com.spiczek.chat.frontend</groupId>
    <artifactId>chat-frontend</artifactId>

    <properties>
        <geronimo.jpa.version>1.1</geronimo.jpa.version>
    </properties>

    <dependencies>
        <!-- Chat dependencies -->
        <dependency>
            <groupId>com.spiczek.chat.backend</groupId>
            <artifactId>chat-backend</artifactId>
            <version>1.0-SNAPSHOT</version>
        </dependency>

        <!-- GWT -->
        <dependency>
            <groupId>com.google.gwt</groupId>
            <artifactId>gwt-user</artifactId>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>com.google.gwt.eventbinder</groupId>
            <artifactId>eventbinder</artifactId>
            <version>1.1.0</version>
        </dependency>
    </dependencies>

    <build>
        <finalName>chat-frontend</finalName>
        <!-- Generate compiled stuff in the folder used for developing mode -->
        <!--<outputDirectory>${webappDirectory}/META-INF/classes</outputDirectory>-->
        <outputDirectory>target/${project.artifactId}-${project.version}/WEB-INF/classes</outputDirectory>

        <plugins>
            <!-- GWT Maven Plugin -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>gwt-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>compile</goal>
                            <!--
                            <goal>test</goal>
                            -->
                        </goals>
                    </execution>
                </executions>
                <!-- Plugin configuration. There are many available options, see
                          gwt-maven-plugin documentation at codehaus.org -->
                <configuration>
                    <runTarget>app.html</runTarget>
                    <draftCompile>true</draftCompile>
                    <hostedWebapp>${webappDirectory}</hostedWebapp>
                    <!--<noServer>true</noServer>-->
                    <port>${tomcat.webport}</port>
                    <!--<runTarget>${tomcat.context}</runTarget>-->
                </configuration>
            </plugin>
            <!-- Copy static web files before executing gwt:run -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>compile</phase>
                        <goals>
                            <goal>exploded</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <webappDirectory>${webappDirectory}</webappDirectory>
                </configuration>
            </plugin>

            <!-- Servers -->
            <!--<plugin>-->
                <!--<groupId>org.apache.tomcat.maven</groupId>-->
                <!--<artifactId>tomcat7-maven-plugin</artifactId>-->
                <!--<configuration>-->
                    <!--<path>${tomcat.context}</path>-->
                    <!--<port>${tomcat.webport}</port>-->
                    <!--<ajpPort>${tomcat.ajpport}</ajpPort>-->
                    <!--<systemProperties>-->
                        <!--<JAVA_OPTS>-XX:MaxPermSize=256m</JAVA_OPTS>-->
                        <!--<MAVEN_OPTS>MAVEN_OPTS=-Xdebug -Xnoagent -Djava.compiler=NONE -Xrunjdwp:transport=dt_socket,address=4000,server=y,suspend=n</MAVEN_OPTS>-->
                    <!--</systemProperties>-->
                <!--</configuration>-->
            <!--</plugin>-->

            <plugin>
                <groupId>org.mortbay.jetty</groupId>
                <artifactId>jetty-maven-plugin</artifactId>
                <version>7.0.0.v20091005</version>
                <configuration>
                    <!--<port>-->
                    <!---->
                    <!--</port>-->
                    <!--<connectors>-->
                    <!--<connector implementation="org.mortbay.jetty.nio.SelectChannelConnector">-->
                    <!--<port>8080</port>-->
                    <!--<maxIdleTime>3600000</maxIdleTime>-->
                    <!--</connector>-->
                    <!--</connectors>-->
                    <!--<scanIntervalSeconds>5</scanIntervalSeconds>-->
                </configuration>
            </plugin>

            <plugin>
                <groupId>com.google.appengine</groupId>
                <artifactId>appengine-maven-plugin</artifactId>
                <version>${appengine.plugin.version}</version>
                <configuration>
                    <enableJarClasses>false</enableJarClasses>
                    <port>8088</port>
                    <address>0.0.0.0</address>
                    <!-- debugging dziala ok debuguje kod serwera -->
                    <jvmFlags>
                        <jvmFlag>-Xdebug</jvmFlag>
                        <jvmFlag>-agentlib:jdwp=transport=dt_socket,address=8008,server=y,suspend=n</jvmFlag>
                        <!--<jvmFlag>-Ddatastore.backing_store=${project.basedir}\local_db.bin</jvmFlag>-->
                    </jvmFlags>
                </configuration>
            </plugin>
        </plugins>
    </build>


</project>